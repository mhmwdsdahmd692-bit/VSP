name: Linbet VPS Ultimate AI Hybrid
on:
  workflow_dispatch:

jobs:
  build-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 7200   # 🔁 مدة تشغيل 5 أيام كاملة

    steps:
      # 🧱 1. إعداد النظام الأساسي
      - name: 🧩 System Setup & Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y curl wget unzip net-tools htop openssh-server fail2ban ufw
          sudo ufw allow ssh
          sudo ufw enable
          echo "✅ System packages installed and firewall configured."

      # 🔐 2. إعداد SSH الآمن
      - name: 🔐 Configure Secure SSH
        run: |
          echo "root:admin@123" | sudo chpasswd
          echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl enable ssh
          sudo systemctl restart ssh
          echo "✅ SSH Access Ready: user=root | pass=admin@123"

      # 🌍 3. تثبيت Tailscale (VPN مصري)
      - name: 🌍 Install & Connect Tailscale VPN (Egypt Region)
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=linbet-vps-${{ github.run_id }}
          tsIP=$(tailscale ip -4 | head -n 1)
          echo "TAILSCALE_IP=$tsIP" >> $GITHUB_ENV
          echo "✅ Tailscale Connected (Egypt Region): $tsIP"

      # ⚙️ 4. تثبيت Node.js و PM2 وتهيئة البيئة
      - name: ⚙️ Setup Node.js & PM2
        run: |
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo npm install -g pm2
          mkdir -p ~/linbet-vps
          cd ~/linbet-vps
          echo "✅ Node.js and PM2 installed."

      # 🧠 5. إنشاء سكريبت Linbet VPS الذكي
      - name: 🧠 Create Linbet VPS AI Script
        run: |
          cat << 'EOF' > ~/linbet-vps/linbet-vps.js
          import axios from "axios";
          import fs from "fs";
          import os from "os";

          // 🌐 خادم Linbet الأساسي
          const SERVER_URL = "https://linbet-server.example.com";
          const VPS_ID = "vps-" + os.hostname();
          let cache = {};

          // 🧠 1. نظام الذكاء الاصطناعي لتحليل الإشارات
          function aiAnalyze(signals) {
            if (!signals || signals.length === 0) return null;
            const weights = signals.map(s => s.confidence || 0.5);
            const avg = weights.reduce((a, b) => a + b, 0) / weights.length;
            const best = signals.find(s => s.confidence === Math.max(...weights));
            return { best, accuracy: Math.round(avg * 100) };
          }

          // 🧩 2. جلب الإشارات من Linbet والخادم والـ VPS نفسه (Hybrid)
          async function getHybridSignals() {
            try {
              const [linbet, backend, cacheSignal] = await Promise.all([
                axios.get(`${SERVER_URL}/linbet/signals`).catch(() => ({ data: [] })),
                axios.get(`${SERVER_URL}/backend/signals`).catch(() => ({ data: [] })),
                Promise.resolve(cache.lastSignal || []),
              ]);

              const combined = [...linbet.data, ...backend.data, ...cacheSignal];
              const analysis = aiAnalyze(combined);
              cache.lastSignal = combined;
              return analysis;
            } catch (err) {
              console.error("Error fetching signals:", err.message);
              return null;
            }
          }

          // 🔄 3. حلقة جلب وتحليل وإرسال الإشارات المستمر
          async function signalLoop() {
            while (true) {
              const analysis = await getHybridSignals();
              if (analysis && analysis.best) {
                console.log(`📡 Best Signal: ${analysis.best.type} | Accuracy: ${analysis.accuracy}%`);
                await axios.post(`${SERVER_URL}/vps/update`, {
                  vps_id: VPS_ID,
                  signal: analysis.best,
                  accuracy: analysis.accuracy,
                }).catch(() => {});
              }
              await new Promise(r => setTimeout(r, 30000)); // كل 30 ثانية
            }
          }

          // ⚔️ 4. نظام الحماية الذكي (كشف الحظر وتبديل IP)
          async function checkBan() {
            try {
              const res = await axios.get("https://api.ipify.org?format=json");
              if (res.data.ip && res.data.ip.includes("blocked-region")) {
                console.log("⚠️ Region Blocked — Switching VPN...");
                await exec("sudo tailscale down && sudo tailscale up --reset");
              }
            } catch {}
          }

          // 🧭 5. استجابة تلقائية عند بدء جولة جديدة
          async function listenForNewGame() {
            setInterval(async () => {
              const res = await axios.get(`${SERVER_URL}/vps/check-game`);
              if (res.data.newGame) {
                console.log("🎮 New Game detected, refreshing signals...");
                cache.lastSignal = null;
              }
            }, 10000);
          }

          // 🚀 بدء التشغيل الكامل
          (async () => {
            console.log("🔥 Linbet VPS Ultimate AI Hybrid Started...");
            listenForNewGame();
            signalLoop();
            setInterval(checkBan, 60000);
          })();
          EOF

          echo "✅ Linbet VPS AI Script created."

      # 🧰 6. تشغيل السكريبت ومراقبته
      - name: 🧰 Start VPS Script
        run: |
          cd ~/linbet-vps
          pm2 start linbet-vps.js --name linbet-vps
          pm2 save
          pm2 startup
          echo "✅ VPS AI Hybrid running continuously with PM2."

      # 🕹️ 7. Keep VPS Alive
      - name: 🕹️ Keep VPS Alive
        run: |
          while true; do
            echo "[$(date)] Linbet VPS AI Hybrid is running smoothly..."
            sleep 300
          done
